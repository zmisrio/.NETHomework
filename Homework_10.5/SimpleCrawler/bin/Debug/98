<!DOCTYPE html>
<html lang="zh-cn">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta name="referrer" content="origin" />
    <meta name="description" content="从今天开始来学习如何在 ASP.NET Core 中构建 Web API 以及每项功能的最佳适用场景。" />
    <meta property="og:description" content="从今天开始来学习如何在 ASP.NET Core 中构建 Web API 以及每项功能的最佳适用场景。" />
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta http-equiv="Cache-Control" content="no-siteapp" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <title>使用 ASP.NET Core MVC 创建 Web API（一） - DotNet菜园 - 博客园</title>
    <link id="favicon" rel="shortcut icon" href="//common.cnblogs.com/favicon.svg" type="image/svg+xml" />
    
    <link rel="stylesheet" href="/css/blog-common.min.css?v=kXxbcm7tkkASG2_xwyD6Kw4CzHe0bT3mi0jyCb8YspQ" />
    <link id="MainCss" rel="stylesheet" href="/skins/classicblue/bundle-classicblue.min.css?v=C_xOBodTdu7qViYoEOWb5uyE0XIl-SuwRkgFEwSDOCc" />
    
    <link id="mobile-style" media="only screen and (max-width: 767px)" type="text/css" rel="stylesheet" href="/skins/classicblue/bundle-classicblue-mobile.min.css?v=arJ4BmwdBcUZrSduKjIvQKPiliQ99OBUW7yasPqJtdY" />
    
    <link type="application/rss+xml" rel="alternate" href="https://www.cnblogs.com/chillsrc/rss" />
    <link type="application/rsd+xml" rel="EditURI" href="https://www.cnblogs.com/chillsrc/rsd.xml" />
    <link type="application/wlwmanifest+xml" rel="wlwmanifest" href="https://www.cnblogs.com/chillsrc/wlwmanifest.xml" />
    <script>
        var currentBlogId = 13897;
        var currentBlogApp = 'chillsrc';
        var cb_enable_mathjax = false;
        var isLogined = false;
        var isBlogOwner = false;
        var skinName = 'ClassicBlue';
        var visitorUserId = '';
    </script>
        <script>
            var currentPostDateAdded = '2019-03-28 02:06';
        </script>
    <script src="https://common.cnblogs.com/scripts/jquery-2.2.0.min.js"></script>
    <script src="/js/blog-common.min.js?v=fLUEwRea4WeqlJe_CLnNunLQZl_ViJFLgKpcNDuKptI"></script>
    
    
    
</head>
<body>
    <a name="top"></a>
    <div id="top_nav" class="navbar navbar-custom">
        <nav id="nav_main" class="navbar-main">
            <ul id="nav_left" class="navbar-list navbar-left">
                <li class="navbar-branding">
                    <a href="https://www.cnblogs.com/" title="开发者的网上家园"><img src="/images/logo.svg?v=R9M0WmLAIPVydmdzE2keuvnjl-bPR7_35oHqtiBzGsM" alt="博客园Logo" /></a>
                </li>
                <li><a href="/" onclick="ga('send', 'event', 'Link', 'click', 'skin-navbar-sitehome')">首页</a></li>
                <li><a href="https://news.cnblogs.com/" onclick="ga('send', 'event', 'Link', 'click', 'skin-navbar-news')">新闻</a></li>
                <li><a href="https://q.cnblogs.com/" onclick="ga('send', 'event', 'Link', 'click', 'skin-navbar-q')">博问</a></li>
                <li><a id="nav_brandzone" href="https://brands.cnblogs.com/" onclick="ga('send', 'event', 'Link', 'click', 'skin-navbar-brands')">专区</a></li>
                <li><a href="https://ing.cnblogs.com/" onclick="ga('send', 'event', 'Link', 'click', 'skin-navbar-ing')">闪存</a></li>
                <li><a href="https://edu.cnblogs.com/" onclick="ga('send', 'event', 'Link', 'click', 'skin-navbar-edu')">班级</a></li>
            </ul>
            <ul id="nav_right" class="navbar-list navbar-right">
                <li>
                    <form id="zzk_search" class="navbar-search" action="https://zzk.cnblogs.com/s" method="get">
                        <input name="w" id="zzk_search_input" placeholder="代码改变世界" type="text" tabindex="3" />
                        <button type="submit" id="zzk_search_button">
                            <img src="/images/aggsite/search.svg" alt="搜索" />
                        </button>
                    </form>
                </li>
                <li id="navbar_login_status" class="navbar-list">
                    <a id="navblog-myblog-icon" class="navbar-user-info navbar-blog" href="https://passport.cnblogs.com/GetBlogApplyStatus.aspx" alt="我的博客" title="我的博客">
                        <img id="myblog_icon" class="navbar-icon" src="/images/aggsite/myblog.svg" alt="我的博客" />
                    </a>
                    <a class="navbar-user-info navbar-message navbar-icon-wrapper" href="https://msg.cnblogs.com/" alt="短消息" title="短消息">
                        <img id="msg_icon" class="navbar-icon" src="/images/aggsite/message.svg?v=oS4PkibyMjZ9rGD5XAcLt99uW_s76Javy2up4dbnZNY" alt="短消息" />
                        <span id="msg_count" style="display: none"></span>
                    </a>
                    <div id="user_info" class="navbar-user-info dropdown">
                        <a class="dropdown-button" href="https://home.cnblogs.com/">
                            <img id="user_icon" class="navbar-avatar" src="/images/aggsite/avatar-default.svg" alt="用户头像" />
                        </a>
                        <div class="dropdown-menu">
                            <a id="navblog-myblog-text" href="https://passport.cnblogs.com/GetBlogApplyStatus.aspx">我的博客</a>
                            <a href="https://home.cnblogs.com/">我的园子</a>
                            <a href="https://account.cnblogs.com/settings/account">账号设置</a>
                            <a href="javascript:void(0)" onclick="logout();">退出登录</a>
                        </div>
                    </div>
                    <a class="navbar-anonymous" href="https://account.cnblogs.com/signup/">注册</a>
                    <a class="navbar-anonymous" href="https://account.cnblogs.com/signin/?returnUrl=https://www.cnblogs.com/">登录</a>
                </li>
            </ul>
        </nav>
    </div>

    
    
<!--done-->
<div id="home">
<div id="header">
	<div id="blogTitle">
        <a id="lnkBlogLogo" href="https://www.cnblogs.com/chillsrc/"><img id="blogLogo" src="/skins/custom/images/logo.gif" alt="返回主页" /></a>		
		
<!--done-->
<h1><a id="Header1_HeaderTitle" class="headermaintitle HeaderMainTitle" href="https://www.cnblogs.com/chillsrc/">DotNet菜园</a>
</h1>
<h2>
专注所以专业,专业所以专注
</h2>




		
	</div><!--end: blogTitle 博客的标题和副标题 -->
	<div id="navigator">
		
<ul id="navList">
<li><a id="blog_nav_sitehome" class="menu" href="https://www.cnblogs.com/">
博客园</a>
</li>
<li>
<a id="blog_nav_myhome" class="menu" href="https://www.cnblogs.com/chillsrc/">
首页</a>
</li>
<li>

<a id="blog_nav_newpost" class="menu" href="https://i.cnblogs.com/EditPosts.aspx?opt=1">
新随笔</a>
</li>
<li>
<a id="blog_nav_contact" class="menu" href="https://msg.cnblogs.com/send/DotNet%E8%8F%9C%E5%9B%AD">
联系</a></li>
<li>
<a id="blog_nav_rss" class="menu" href="javascript:void(0)" data-rss="https://www.cnblogs.com/chillsrc/rss/">
订阅</a>
<!--<partial name="./Shared/_XmlLink.cshtml" model="Model" /></li>--></li>
<li>
<a id="blog_nav_admin" class="menu" href="https://i.cnblogs.com/">
管理</a>
</li>
</ul>


		<div class="blogStats">
			
			<span id="stats_post_count">随笔 - 
276&nbsp; </span>
<span id="stats_article_count">文章 - 
32&nbsp; </span>
<span id="stats-comment_count">评论 - 
836</span>

			
		</div><!--end: blogStats -->
	</div><!--end: navigator 博客导航栏 -->
</div><!--end: header 头部 -->

<div id="main">
	<div id="mainContent">
	<div class="forFlow">
		<div id="post_detail">
    <!--done-->
    <div id="topics">
        <div class="post">
            <h1 class = "postTitle">
                
<a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/chillsrc/p/10614598.html">
    <span>使用 ASP.NET Core MVC 创建 Web API（一）</span>
    


</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                
    <div id="cnblogs_post_description" style="display: none">
        从今天开始来学习如何在 ASP.NET Core 中构建 Web API 以及每项功能的最佳适用场景。
    </div>
<div id="cnblogs_post_body" class="blogpost-body">
    <p align="left"><span style="font-size: 16px">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 从今天开始来学习如何在 ASP.NET Core 中构建 Web API 以及每项功能的最佳适用场景。关于此次示例的数据库创建请参考《<span style="color: rgba(0, 0, 255, 1)"><a id="homepage1_HomePageDays_DaysList_ctl18_DayList_TitleUrl_0" class="postTitle2" href="https://www.cnblogs.com/chillsrc/p/8579777.html"><span style="color: rgba(0, 0, 255, 1)">学习ASP.NET Core Razor 编程系列一》</span></a></span></span>&nbsp;&nbsp;&nbsp; <span style="font-size: 16px">至</span>&nbsp; <span style="font-size: 16px"><span style="color: rgba(0, 0, 255, 1)"><a id="homepage1_HomePageDays_DaysList_ctl18_DayList_TitleUrl_0" class="postTitle2" href="https://www.cnblogs.com/chillsrc/p/8579777.html"><span style="color: rgba(0, 0, 255, 1)">《</span></a><span style="color: rgba(0, 0, 255, 1)"><a id="homepage1_HomePageDays_DaysList_ctl18_DayList_TitleUrl_0" class="postTitle2" href="https://www.cnblogs.com/chillsrc/p/8579777.html"></a><a id="homepage1_HomePageDays_DaysList_ctl01_DayList_TitleUrl_0" class="postTitle2" href="https://www.cnblogs.com/chillsrc/p/10509412.html"><span style="color: rgba(0, 0, 255, 1)">学习ASP.NET Core Razor 编程系列十九——分页</span></a><span style="color: rgba(0, 0, 255, 1)"><a id="homepage1_HomePageDays_DaysList_ctl18_DayList_TitleUrl_0" class="postTitle2" href="https://www.cnblogs.com/chillsrc/p/8579777.html"><span style="color: rgba(0, 0, 255, 1)">》</span></a></span></span></span></span></p>
<h2><span style="font-size: 16px">一、概述</span></h2>
<p><span style="font-size: 16px">&nbsp;&nbsp;&nbsp; 本教程将创建以下 Web API：</span></p>
<table border="0" cellpadding="0">
<thead>
<tr>
<td>
<p align="center"><span style="font-size: 16px"><strong>API</strong></span></p>
</td>
<td>
<p align="center"><span style="font-size: 16px"><strong>说明</strong></span></p>
</td>
<td>
<p align="center"><span style="font-size: 16px"><strong>请求正文</strong></span></p>
</td>
<td>
<p align="center"><span style="font-size: 16px"><strong>响应正文</strong></span></p>
</td>
</tr>
</thead>
<tbody>
<tr>
<td>
<p><span style="font-size: 16px">GET /api/Book</span></p>
</td>
<td>
<p><span style="font-size: 16px">获取所有的书籍信息</span></p>
</td>
<td>
<p><span style="font-size: 16px">None</span></p>
</td>
<td>
<p><span style="font-size: 16px">书籍的数组</span></p>
</td>
</tr>
<tr>
<td>
<p><span style="font-size: 16px">GET /api/Book/{id}</span></p>
</td>
<td>
<p><span style="font-size: 16px">通过 ID 获取书籍信息</span></p>
</td>
<td>
<p><span style="font-size: 16px">None</span></p>
</td>
<td>
<p><span style="font-size: 16px">书籍信息</span></p>
</td>
</tr>
<tr>
<td>
<p><span style="font-size: 16px">POST /api/Book</span></p>
</td>
<td>
<p><span style="font-size: 16px">添加书籍<span style="font-size: 16px">信息</span></span></p>
</td>
<td>
<p><span style="font-size: 16px">书籍<span style="font-size: 16px">信息</span></span></p>
</td>
<td>
<p><span style="font-size: 16px">书籍<span style="font-size: 16px">信息</span></span></p>
</td>
</tr>
<tr>
<td>
<p><span style="font-size: 16px">PUT /api/Book/{id}</span></p>
</td>
<td>
<p><span style="font-size: 16px">根据ID更新现有书籍<span style="font-size: 16px">信息</span> &nbsp;</span></p>
</td>
<td>
<p><span style="font-size: 16px">书籍<span style="font-size: 16px">信息</span></span></p>
</td>
<td>
<p><span style="font-size: 16px">None</span></p>
</td>
</tr>
<tr>
<td>
<p><span style="font-size: 16px">DELETE /api/Book/{id} &nbsp; &nbsp;</span></p>
</td>
<td>
<p><span style="font-size: 16px">根据ID删除书籍</span></p>
</td>
<td>
<p><span style="font-size: 16px">None</span></p>
</td>
<td>
<p><span style="font-size: 16px">None</span></p>
</td>
</tr>
</tbody>
</table>
<p><span style="font-size: 16px">&nbsp;&nbsp;&nbsp; 下图显示了这次我们所要创建的应用的设计。</span></p>
<p><span style="font-size: 16px">&nbsp;<img src="https://img2018.cnblogs.com/blog/10343/201903/10343-20190328135602711-1790947133.png" alt=""></span></p>
<h2><span style="font-size: 16px">二、创建 Web API项目</span></h2>
<p><span style="font-size: 16px">&nbsp;&nbsp;&nbsp;&nbsp; 1) 我们打开Visual Studio 2017，在菜单中选择“文件”菜单，然后选择“新建” &gt; “项目”。</span></p>
<p><span style="font-size: 16px">&nbsp;&nbsp; &nbsp; 2) 选择“ASP.NET Core Web 应用程序”模板。 将项目命名为 BookApi，然后单击“确定”。如下图。</span></p>
<p><span style="font-size: 16px">&nbsp;<img src="https://img2018.cnblogs.com/blog/10343/201903/10343-20190328135900712-721742120.png" alt=""></span></p>
<p><span style="font-size: 16px">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 3) 在“新建 ASP.NET Core Web 应用程序 - BookApi”对话框中，选择 ASP.NET Core 版本。 选择“API”模板，然后单击“确定”。 请不要选择“启用 Docker 支持”与“为HTTPS配置”。如下图。</span></p>
<p><span style="font-size: 16px">&nbsp;<img src="https://img2018.cnblogs.com/blog/10343/201903/10343-20190328135919978-1350982611.png" alt=""></span></p>
<h3><span style="font-size: 16px">三、测试 API</span></h3>
<p><span style="font-size: 16px">&nbsp;&nbsp;&nbsp;&nbsp; 现在我们已经创建了BookApi应用项目。ASP.NET Core MVC 项目模板会在我们新创建的BookApi项目中默认创建一个WebAPI—— <code>values</code> API。</span></p>
<p><span style="font-size: 16px">&nbsp;&nbsp;&nbsp;&nbsp; 在Visual Studio 2017中按 F5 运行应用程序。然后启动浏览器，并在浏览器地址栏中输入 <code>http://localhost:5000/api/values</code>，浏览器会调用Get方法进行测试，返回如下图的 JSON，则证明我们的应用创建成功。</span></p>
<p><span style="font-size: 16px">&nbsp;<img src="https://img2018.cnblogs.com/blog/10343/201903/10343-20190328140112870-1169470916.png" alt=""></span></p>
<h2><span style="font-size: 16px">四、添加实体类</span></h2>
<p><span style="font-size: 16px">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 实体是一组表示应用管理的数据的类。 我们这次使用单个 <code>Book</code> 类，接下来我们来创建这个Book类。</span></p>
<p align="left"><span style="font-size: 16px">&nbsp;&nbsp;&nbsp;&nbsp; 1) 在Visual Studio 2017的“解决方案资源管理器”中，右键单击项目。 选择“添加” &gt; “新建文件夹”。如下图。</span></p>
<p align="left"><span style="font-size: 16px"><span style="font-size: 16px"><img src="https://img2018.cnblogs.com/blog/10343/201903/10343-20190328140157976-1588324470.png" alt=""></span></span></p>
<p align="left"><span style="font-size: 16px">&nbsp; &nbsp;&nbsp; 2) 将文件夹命名为“Models”。</span></p>
<p align="left"><span style="font-size: 16px">&nbsp;&nbsp;&nbsp;&nbsp; 3) 右键单击“Models”文件夹，然后选择“添加” &gt; “类”。 将类命名为 Book，然后选择“添加”。如下图。</span></p>
<p align="left"><span style="font-size: 16px">&nbsp;<img src="https://img2018.cnblogs.com/blog/10343/201903/10343-20190328141110681-532419841.png" alt=""></span></p>
<p><span style="font-size: 16px">&nbsp;&nbsp;&nbsp; 4）在Visual Studio 2017的“解决方案资源管理器”中打开我们刚才创建的Book.cs文件，并输入以下代码：</span></p>
<div class="cnblogs_code">
<pre><span style="color: rgba(0, 0, 255, 1)">using</span><span style="color: rgba(0, 0, 0, 1)"> System;
</span><span style="color: rgba(0, 0, 255, 1)">using</span><span style="color: rgba(0, 0, 0, 1)"> System.Collections.Generic;
</span><span style="color: rgba(0, 0, 255, 1)">using</span><span style="color: rgba(0, 0, 0, 1)"> System.ComponentModel.DataAnnotations;
</span><span style="color: rgba(0, 0, 255, 1)">using</span><span style="color: rgba(0, 0, 0, 1)"> System.Linq;
</span><span style="color: rgba(0, 0, 255, 1)">using</span><span style="color: rgba(0, 0, 0, 1)"> System.Threading.Tasks;
 

</span><span style="color: rgba(0, 0, 255, 1)">namespace</span><span style="color: rgba(0, 0, 0, 1)"> BookApi.Models
{

    </span><span style="color: rgba(0, 0, 255, 1)">public</span> <span style="color: rgba(0, 0, 255, 1)">class</span><span style="color: rgba(0, 0, 0, 1)"> Book
    {
        </span><span style="color: rgba(0, 0, 255, 1)">public</span> <span style="color: rgba(0, 0, 255, 1)">int</span> ID { <span style="color: rgba(0, 0, 255, 1)">get</span>; <span style="color: rgba(0, 0, 255, 1)">set</span><span style="color: rgba(0, 0, 0, 1)">; }
        [Required]

        [StringLength(</span><span style="color: rgba(128, 0, 128, 1)">50</span>, MinimumLength = <span style="color: rgba(128, 0, 128, 1)">2</span><span style="color: rgba(0, 0, 0, 1)">)]
        </span><span style="color: rgba(0, 0, 255, 1)">public</span> <span style="color: rgba(0, 0, 255, 1)">string</span> Name { <span style="color: rgba(0, 0, 255, 1)">get</span>; <span style="color: rgba(0, 0, 255, 1)">set</span><span style="color: rgba(0, 0, 0, 1)">; }

        [Display(Name </span>= <span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(128, 0, 0, 1)">出版日期</span><span style="color: rgba(128, 0, 0, 1)">"</span><span style="color: rgba(0, 0, 0, 1)">)]
        [DataType(DataType.Date)]

         </span><span style="color: rgba(0, 0, 255, 1)">public</span> DateTime ReleaseDate { <span style="color: rgba(0, 0, 255, 1)">get</span>; <span style="color: rgba(0, 0, 255, 1)">set</span><span style="color: rgba(0, 0, 0, 1)">; }
        [Range(</span><span style="color: rgba(128, 0, 128, 1)">1</span>, <span style="color: rgba(128, 0, 128, 1)">200</span><span style="color: rgba(0, 0, 0, 1)">)]

        [DataType(DataType.Currency)]
        </span><span style="color: rgba(0, 0, 255, 1)">public</span> <span style="color: rgba(0, 0, 255, 1)">decimal</span> Price { <span style="color: rgba(0, 0, 255, 1)">get</span>; <span style="color: rgba(0, 0, 255, 1)">set</span><span style="color: rgba(0, 0, 0, 1)">; }   

        </span><span style="color: rgba(0, 0, 255, 1)">public</span> <span style="color: rgba(0, 0, 255, 1)">string</span> Author { <span style="color: rgba(0, 0, 255, 1)">get</span>; <span style="color: rgba(0, 0, 255, 1)">set</span><span style="color: rgba(0, 0, 0, 1)">; }
        [Required]

        </span><span style="color: rgba(0, 0, 255, 1)">public</span> <span style="color: rgba(0, 0, 255, 1)">string</span> Publishing { <span style="color: rgba(0, 0, 255, 1)">get</span>; <span style="color: rgba(0, 0, 255, 1)">set</span><span style="color: rgba(0, 0, 0, 1)">; }
        [Timestamp]

        </span><span style="color: rgba(0, 0, 255, 1)">public</span> <span style="color: rgba(0, 0, 255, 1)">byte</span>[] RowVersion { <span style="color: rgba(0, 0, 255, 1)">get</span>; <span style="color: rgba(0, 0, 255, 1)">set</span><span style="color: rgba(0, 0, 0, 1)">; }
    }
}</span></pre>
</div>
<p>&nbsp;</p>
<p><span style="font-size: 16px"><code>&nbsp; Id</code> 属性用作关系数据库中的唯一键。</span></p>
<p><span style="font-size: 16px">&nbsp;&nbsp;&nbsp;&nbsp; 实体类可位于项目的任意位置，但按照惯例会使用 Models 文件夹。</span></p>
<h2><span style="font-size: 16px">五、数据表创建脚本</span></h2>
<p align="left"><span style="font-size: 16px">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 我在这里直接给出Book表的创建脚本，代码如下。<br></span></p>
<div class="cnblogs_code">
<pre><span style="color: rgba(0, 0, 255, 1)">CREATE</span> <span style="color: rgba(0, 0, 255, 1)">TABLE</span> <span style="color: rgba(255, 0, 0, 1)">[</span><span style="color: rgba(255, 0, 0, 1)">dbo</span><span style="color: rgba(255, 0, 0, 1)">]</span>.<span style="color: rgba(255, 0, 0, 1)">[</span><span style="color: rgba(255, 0, 0, 1)">Book</span><span style="color: rgba(255, 0, 0, 1)">]</span><span style="color: rgba(0, 0, 0, 1)">(
    </span><span style="color: rgba(255, 0, 0, 1)">[</span><span style="color: rgba(255, 0, 0, 1)">ID</span><span style="color: rgba(255, 0, 0, 1)">]</span> <span style="color: rgba(255, 0, 0, 1)">[</span><span style="color: rgba(255, 0, 0, 1)">int</span><span style="color: rgba(255, 0, 0, 1)">]</span> <span style="color: rgba(255, 0, 255, 1)">IDENTITY</span>(<span style="color: rgba(128, 0, 0, 1); font-weight: bold">1</span>,<span style="color: rgba(128, 0, 0, 1); font-weight: bold">1</span>) <span style="color: rgba(128, 128, 128, 1)">NOT</span> <span style="color: rgba(0, 0, 255, 1)">NULL</span><span style="color: rgba(0, 0, 0, 1)">,
    </span><span style="color: rgba(255, 0, 0, 1)">[</span><span style="color: rgba(255, 0, 0, 1)">Author</span><span style="color: rgba(255, 0, 0, 1)">]</span> <span style="color: rgba(255, 0, 0, 1)">[</span><span style="color: rgba(255, 0, 0, 1)">nvarchar</span><span style="color: rgba(255, 0, 0, 1)">]</span>(<span style="color: rgba(255, 0, 255, 1)">max</span>) <span style="color: rgba(0, 0, 255, 1)">NULL</span><span style="color: rgba(0, 0, 0, 1)">,
    </span><span style="color: rgba(255, 0, 0, 1)">[</span><span style="color: rgba(255, 0, 0, 1)">Name</span><span style="color: rgba(255, 0, 0, 1)">]</span> <span style="color: rgba(255, 0, 0, 1)">[</span><span style="color: rgba(255, 0, 0, 1)">nvarchar</span><span style="color: rgba(255, 0, 0, 1)">]</span>(<span style="color: rgba(128, 0, 0, 1); font-weight: bold">50</span>) <span style="color: rgba(128, 128, 128, 1)">NOT</span> <span style="color: rgba(0, 0, 255, 1)">NULL</span><span style="color: rgba(0, 0, 0, 1)">,
    </span><span style="color: rgba(255, 0, 0, 1)">[</span><span style="color: rgba(255, 0, 0, 1)">Price</span><span style="color: rgba(255, 0, 0, 1)">]</span> <span style="color: rgba(255, 0, 0, 1)">[</span><span style="color: rgba(255, 0, 0, 1)">decimal</span><span style="color: rgba(255, 0, 0, 1)">]</span>(<span style="color: rgba(128, 0, 0, 1); font-weight: bold">18</span>, <span style="color: rgba(128, 0, 0, 1); font-weight: bold">2</span>) <span style="color: rgba(128, 128, 128, 1)">NOT</span> <span style="color: rgba(0, 0, 255, 1)">NULL</span><span style="color: rgba(0, 0, 0, 1)">,
    </span><span style="color: rgba(255, 0, 0, 1)">[</span><span style="color: rgba(255, 0, 0, 1)">ReleaseDate</span><span style="color: rgba(255, 0, 0, 1)">]</span> <span style="color: rgba(255, 0, 0, 1)">[</span><span style="color: rgba(255, 0, 0, 1)">datetime2</span><span style="color: rgba(255, 0, 0, 1)">]</span>(<span style="color: rgba(128, 0, 0, 1); font-weight: bold">7</span>) <span style="color: rgba(128, 128, 128, 1)">NOT</span> <span style="color: rgba(0, 0, 255, 1)">NULL</span><span style="color: rgba(0, 0, 0, 1)">,
    </span><span style="color: rgba(255, 0, 0, 1)">[</span><span style="color: rgba(255, 0, 0, 1)">Publishing</span><span style="color: rgba(255, 0, 0, 1)">]</span> <span style="color: rgba(255, 0, 0, 1)">[</span><span style="color: rgba(255, 0, 0, 1)">nvarchar</span><span style="color: rgba(255, 0, 0, 1)">]</span>(<span style="color: rgba(255, 0, 255, 1)">max</span>) <span style="color: rgba(128, 128, 128, 1)">NOT</span> <span style="color: rgba(0, 0, 255, 1)">NULL</span><span style="color: rgba(0, 0, 0, 1)">,
    </span><span style="color: rgba(255, 0, 0, 1)">[</span><span style="color: rgba(255, 0, 0, 1)">RowVersion</span><span style="color: rgba(255, 0, 0, 1)">]</span> <span style="color: rgba(255, 0, 0, 1)">[</span><span style="color: rgba(255, 0, 0, 1)">timestamp</span><span style="color: rgba(255, 0, 0, 1)">]</span> <span style="color: rgba(0, 0, 255, 1)">NULL</span><span style="color: rgba(0, 0, 0, 1)">,
 </span><span style="color: rgba(0, 0, 255, 1)">CONSTRAINT</span> <span style="color: rgba(255, 0, 0, 1)">[</span><span style="color: rgba(255, 0, 0, 1)">PK_Book</span><span style="color: rgba(255, 0, 0, 1)">]</span> <span style="color: rgba(0, 0, 255, 1)">PRIMARY</span> <span style="color: rgba(0, 0, 255, 1)">KEY</span> <span style="color: rgba(0, 0, 255, 1)">CLUSTERED</span><span style="color: rgba(0, 0, 0, 1)">
(
    </span><span style="color: rgba(255, 0, 0, 1)">[</span><span style="color: rgba(255, 0, 0, 1)">ID</span><span style="color: rgba(255, 0, 0, 1)">]</span> <span style="color: rgba(0, 0, 255, 1)">ASC</span><span style="color: rgba(0, 0, 0, 1)">
)</span><span style="color: rgba(0, 0, 255, 1)">WITH</span> (PAD_INDEX <span style="color: rgba(128, 128, 128, 1)">=</span> <span style="color: rgba(0, 0, 255, 1)">OFF</span>, STATISTICS_NORECOMPUTE <span style="color: rgba(128, 128, 128, 1)">=</span> <span style="color: rgba(0, 0, 255, 1)">OFF</span>, IGNORE_DUP_KEY <span style="color: rgba(128, 128, 128, 1)">=</span> <span style="color: rgba(0, 0, 255, 1)">OFF</span>, ALLOW_ROW_LOCKS <span style="color: rgba(128, 128, 128, 1)">=</span> <span style="color: rgba(0, 0, 255, 1)">ON</span>, ALLOW_PAGE_LOCKS <span style="color: rgba(128, 128, 128, 1)">=</span> <span style="color: rgba(0, 0, 255, 1)">ON</span>) <span style="color: rgba(0, 0, 255, 1)">ON</span> <span style="color: rgba(255, 0, 0, 1)">[</span><span style="color: rgba(255, 0, 0, 1)">PRIMARY</span><span style="color: rgba(255, 0, 0, 1)">]</span><span style="color: rgba(0, 0, 0, 1)">
) </span><span style="color: rgba(0, 0, 255, 1)">ON</span> <span style="color: rgba(255, 0, 0, 1)">[</span><span style="color: rgba(255, 0, 0, 1)">PRIMARY</span><span style="color: rgba(255, 0, 0, 1)">]</span> TEXTIMAGE_ON <span style="color: rgba(255, 0, 0, 1)">[</span><span style="color: rgba(255, 0, 0, 1)">PRIMARY</span><span style="color: rgba(255, 0, 0, 1)">]</span>

 </pre>
</div>
<p>&nbsp;</p>
<p><span style="font-size: 16px">&nbsp;</span></p>
</div>
<div id="MySignature"></div>
<div class="clear"></div>
<div id="blog_post_info_block">
    <div id="blog_post_info"></div>
    <div class="clear"></div>
    <div id="post_next_prev"></div>
</div>
            </div>
            <div class="postDesc">posted @ 
<span id="post-date">2019-03-28 14:06</span>&nbsp;
<a href="https://www.cnblogs.com/chillsrc/">DotNet菜园</a>&nbsp;
阅读(<span id="post_view_count">7662</span>)&nbsp;
评论(<span id="post_comment_count">5</span>)&nbsp;
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=10614598" rel="nofollow">编辑</a>&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(10614598);return false;">收藏</a></div>
        </div>
	    
	    
    </div><!--end: topics 文章、评论容器-->
</div>
<script src="https://common.cnblogs.com/highlight/9.12.0/highlight.min.js"></script>
<script>markdown_highlight();</script>
<script>
    var allowComments = true, cb_blogId = 13897, cb_blogApp = 'chillsrc', cb_blogUserGuid = 'c642360b-63cf-dd11-9e4d-001cf0cd104b';
    var cb_entryId = 10614598, cb_entryCreatedDate = '2019-03-28 14:06', cb_postType = 1;
    loadViewCount(cb_entryId);
</script><a name="!comments"></a>
<div id="blog-comments-placeholder"></div>
<script>
    var commentManager = new blogCommentManager();
    commentManager.renderComments(0);
</script>
<div id="comment_form" class="commentform">
    <a name="commentform"></a>
    <div id="divCommentShow"></div>
    <div id="comment_nav"><span id="span_refresh_tips"></span><a href="javascript:void(0);" onclick="return RefreshCommentList();" id="lnk_RefreshComments" runat="server" clientidmode="Static">刷新评论</a><a href="#" onclick="return RefreshPage();">刷新页面</a><a href="#top">返回顶部</a></div>
    <div id="comment_form_container"></div>
    <div class="ad_text_commentbox" id="ad_text_under_commentbox"></div>
    <div id="ad_t2"></div>
    <div id="opt_under_post"></div>
    <div id="cnblogs_c1" class="c_ad_block">
        <div id='div-gpt-ad-1592365906576-0' style='width: 300px; height: 250px;'></div>
    </div>
    <div id="under_post_news"></div>
    <div id="cnblogs_c2" class="c_ad_block">
        <div id='div-gpt-ad-1592366332455-0' style='width: 468px; height: 60px;'></div>
    </div>
    <div id="under_post_kb"></div>
    <div id="HistoryToday" class="c_ad_block"></div>
    <script type="text/javascript">
        fixPostBody();
        deliverBigBanner();
setTimeout(function() { incrementViewCount(cb_entryId); }, 50);        deliverT2();
        deliverC1C2();
        loadNewsAndKb();
        loadBlogSignature();
LoadPostCategoriesTags(cb_blogId, cb_entryId);        LoadPostInfoBlock(cb_blogId, cb_entryId, cb_blogApp, cb_blogUserGuid);
        GetPrevNextPost(cb_entryId, cb_blogId, cb_entryCreatedDate, cb_postType);
        loadOptUnderPost();
        GetHistoryToday(cb_blogId, cb_blogApp, cb_entryCreatedDate);
    </script>
</div>
	</div><!--end: forFlow -->
	</div><!--end: mainContent 主体内容容器-->

	<div id="sideBar">
		<div id="sideBarMain">
			
<div id="sidebar_news" class="newsItem">
            <script>loadBlogNews();</script>
</div>

<div id="sidebar_ad"></div>
			<div id="blog-calendar" style="display:none"></div><script>loadBlogDefaultCalendar();</script>
			
			<div id="leftcontentcontainer">
				<div id="blog-sidecolumn"></div>
                    <script>loadBlogSideColumn();</script>
			</div>
			
		</div><!--end: sideBarMain -->
	</div><!--end: sideBar 侧边栏容器 -->
	<div class="clear"></div>
	</div><!--end: main -->
	<div class="clear"></div>
	<div id="footer">
		<!--done-->
Copyright &copy; 2020 DotNet菜园
<br /><span id="poweredby">Powered by .NET Core on Kubernetes</span>



	</div><!--end: footer -->
</div><!--end: home 自定义的最大容器 -->


    
</body>
</html>

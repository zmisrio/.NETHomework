<!DOCTYPE html>
<html lang="zh-cn">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta name="referrer" content="origin" />
    <meta name="description" content="最近打算把Java网络编程相关的知识深入一下（IO、NIO、Socket编程、Netty) Java的I/O建立于流之上。输入流读取数据、输出流写入数据 输入输出流 输入流 输入流InputStrea" />
    <meta property="og:description" content="最近打算把Java网络编程相关的知识深入一下（IO、NIO、Socket编程、Netty) Java的I/O建立于流之上。输入流读取数据、输出流写入数据 输入输出流 输入流 输入流InputStrea" />
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta http-equiv="Cache-Control" content="no-siteapp" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <title>Java I/O流 - 油多坏不了菜 - 博客园</title>
    <link id="favicon" rel="shortcut icon" href="//common.cnblogs.com/favicon.svg" type="image/svg+xml" />
    
    <link rel="stylesheet" href="/css/blog-common.min.css?v=kXxbcm7tkkASG2_xwyD6Kw4CzHe0bT3mi0jyCb8YspQ" />
    <link id="MainCss" rel="stylesheet" href="/skins/simpleblue/bundle-simpleblue.min.css?v=Bz6eufLWGVsWJjKcjfFVp12zhnPfKDi7i7Z6x00pOIo" />
    
    <link id="mobile-style" media="only screen and (max-width: 767px)" type="text/css" rel="stylesheet" href="/skins/simpleblue/bundle-simpleblue-mobile.min.css?v=xbzzau3Jqgjmy0hPlKp75vATFEb2H-hCGf6MOx4l_3g" />
    
    <link type="application/rss+xml" rel="alternate" href="https://www.cnblogs.com/pepper-0611/rss" />
    <link type="application/rsd+xml" rel="EditURI" href="https://www.cnblogs.com/pepper-0611/rsd.xml" />
    <link type="application/wlwmanifest+xml" rel="wlwmanifest" href="https://www.cnblogs.com/pepper-0611/wlwmanifest.xml" />
    <script>
        var currentBlogId = 629008;
        var currentBlogApp = 'pepper-0611';
        var cb_enable_mathjax = false;
        var isLogined = false;
        var isBlogOwner = false;
        var skinName = 'SimpleBlue';
        var visitorUserId = '';
    </script>
        <script>
            var currentPostDateAdded = '2020-09-26 02:53';
        </script>
    <script src="https://common.cnblogs.com/scripts/jquery-2.2.0.min.js"></script>
    <script src="/js/blog-common.min.js?v=fLUEwRea4WeqlJe_CLnNunLQZl_ViJFLgKpcNDuKptI"></script>
    
    
    
</head>
<body>
    <a name="top"></a>
    <div id="top_nav" class="navbar">
        <nav id="nav_main" class="navbar-main">
            <ul id="nav_left" class="navbar-list navbar-left">
                <li class="navbar-branding">
                    <a href="https://www.cnblogs.com/" title="开发者的网上家园"><img src="/images/logo.svg?v=R9M0WmLAIPVydmdzE2keuvnjl-bPR7_35oHqtiBzGsM" alt="博客园Logo" /></a>
                </li>
                <li><a href="/" onclick="ga('send', 'event', 'Link', 'click', 'skin-navbar-sitehome')">首页</a></li>
                <li><a href="https://news.cnblogs.com/" onclick="ga('send', 'event', 'Link', 'click', 'skin-navbar-news')">新闻</a></li>
                <li><a href="https://q.cnblogs.com/" onclick="ga('send', 'event', 'Link', 'click', 'skin-navbar-q')">博问</a></li>
                <li><a id="nav_brandzone" href="https://brands.cnblogs.com/" onclick="ga('send', 'event', 'Link', 'click', 'skin-navbar-brands')">专区</a></li>
                <li><a href="https://ing.cnblogs.com/" onclick="ga('send', 'event', 'Link', 'click', 'skin-navbar-ing')">闪存</a></li>
                <li><a href="https://edu.cnblogs.com/" onclick="ga('send', 'event', 'Link', 'click', 'skin-navbar-edu')">班级</a></li>
            </ul>
            <ul id="nav_right" class="navbar-list navbar-right">
                <li>
                    <form id="zzk_search" class="navbar-search" action="https://zzk.cnblogs.com/s" method="get">
                        <input name="w" id="zzk_search_input" placeholder="代码改变世界" type="text" tabindex="3" />
                        <button type="submit" id="zzk_search_button">
                            <img src="/images/aggsite/search.svg" alt="搜索" />
                        </button>
                    </form>
                </li>
                <li id="navbar_login_status" class="navbar-list">
                    <a id="navblog-myblog-icon" class="navbar-user-info navbar-blog" href="https://passport.cnblogs.com/GetBlogApplyStatus.aspx" alt="我的博客" title="我的博客">
                        <img id="myblog_icon" class="navbar-icon" src="/images/aggsite/myblog.svg" alt="我的博客" />
                    </a>
                    <a class="navbar-user-info navbar-message navbar-icon-wrapper" href="https://msg.cnblogs.com/" alt="短消息" title="短消息">
                        <img id="msg_icon" class="navbar-icon" src="/images/aggsite/message.svg?v=oS4PkibyMjZ9rGD5XAcLt99uW_s76Javy2up4dbnZNY" alt="短消息" />
                        <span id="msg_count" style="display: none"></span>
                    </a>
                    <div id="user_info" class="navbar-user-info dropdown">
                        <a class="dropdown-button" href="https://home.cnblogs.com/">
                            <img id="user_icon" class="navbar-avatar" src="/images/aggsite/avatar-default.svg" alt="用户头像" />
                        </a>
                        <div class="dropdown-menu">
                            <a id="navblog-myblog-text" href="https://passport.cnblogs.com/GetBlogApplyStatus.aspx">我的博客</a>
                            <a href="https://home.cnblogs.com/">我的园子</a>
                            <a href="https://account.cnblogs.com/settings/account">账号设置</a>
                            <a href="javascript:void(0)" onclick="logout();">退出登录</a>
                        </div>
                    </div>
                    <a class="navbar-anonymous" href="https://account.cnblogs.com/signup/">注册</a>
                    <a class="navbar-anonymous" href="https://account.cnblogs.com/signin/?returnUrl=https://www.cnblogs.com/">登录</a>
                </li>
            </ul>
        </nav>
    </div>

    
    <div id="home">
    <div id="header">
        <div id="blogTitle">
            
<div class="title"><a id="Header1_HeaderTitle" class="headermaintitle HeaderMainTitle" href="https://www.cnblogs.com/pepper-0611/">油多坏不了菜</a>
</div>
<div class="subtitle">

</div>

        </div>
        <div id="navigator">
            
<ul id="navList">
    <li id="nav_sitehome"><a id="blog_nav_sitehome" class="menu" href="https://www.cnblogs.com/">
博客园</a>
</li>
    <li id="nav_myhome">
<a id="blog_nav_myhome" class="menu" href="https://www.cnblogs.com/pepper-0611/">
首页</a>
</li>
    <li id="nav_newpost">

<a id="blog_nav_newpost" class="menu" href="https://i.cnblogs.com/EditPosts.aspx?opt=1">
新随笔</a>
</li>
    <li id="nav_contact">
<a id="blog_nav_contact" class="menu" href="https://msg.cnblogs.com/send/%E6%B2%B9%E5%A4%9A%E5%9D%8F%E4%B8%8D%E4%BA%86%E8%8F%9C">
联系</a></li>
    <li id="nav_rss">
<a id="blog_nav_rss" class="menu" href="javascript:void(0)" data-rss="https://www.cnblogs.com/pepper-0611/rss/">
订阅</a></li>
    <li id="nav_admin">
<a id="blog_nav_admin" class="menu" href="https://i.cnblogs.com/">
管理</a>
</li>
</ul>

            <div class="blogStats">
                
<span id="stats_post_count">随笔 - 
5&nbsp;</span>
<span id="stats_article_count">文章 - 
0&nbsp;</span>
<!-- <span id="stats-comment_count"></span> -->
<span id="stats_comment_count">评论 - 
0</span>
            </div>
        </div>
    </div>
    <div id="main">
        <div id="mainContent">
            <div class="forFlow">
                <div id="post_detail">
    <div id="topics">
        <div class="post">
            <h1 class="postTitle">
                
<a id="cb_post_title_url" class="postTitle2 vertical-middle" href="https://www.cnblogs.com/pepper-0611/p/13735018.html">
    <span>Java I/O流</span>
    


</a>

            </h1>
            <div class="clear"></div>
            <div class="postBody">
                
<div id="cnblogs_post_body" class="blogpost-body cnblogs-markdown">
    <p>最近打算把Java网络编程相关的知识深入一下（IO、NIO、Socket编程、Netty)</p>
<p>Java的I/O建立于流之上。输入流读取数据、输出流写入数据</p>
<h2 id="输入输出流">输入输出流</h2>
<h3 id="输入流">输入流</h3>
<p>输入流InputStream的API如下：</p>
<pre><code class="language-java">public abstract int read() throws IOException;//-1 到 255
public int read(byte b[]) throws IOException 
public int read(byte b[], int off, int len) throws IOException
public long skip(long n) throws IOException
public int available() throws IOException
public void close() throws IOException 
</code></pre>
<p>read()方法返回的实际上是一个无符号byte(Java中没有无符号byte类型, 就直接用int作为返回值了)</p>
<p>read方法返回-1时代表已经读完数据（如果是网络通信的话就代表对端不会再发送数据）</p>
<h3 id="输出流">输出流</h3>
<p>输出流OutputStreamAPI如下：</p>
<pre><code class="language-java">// OutputStream接口定义的几个方法
public abstract void write(int b) throws IOException;
public void write(byte b[]) throws IOException 
public void write(byte b[], int off, int len) throws IOException
public void flush() throws IOException
public void close() throws IOException
</code></pre>
<p>write(int) 方法实际写入的是int的低8位（一个字节）</p>
<p>尽量不要使用write(int), 因为每次发送一个字节效率不高（每个TCP报文都至少有40个字节的网络传输开销， 每次传输数据太少的话信道利用率不高）</p>
<p>flush() 将缓冲区中的内容刷到底层输出流</p>
<h3 id="关闭流">关闭流</h3>
<p>流对应了底层的文件句柄和端口， 所以使用完成之后一定要关闭</p>
<p>下面是常见的一种关闭流的写法（把流的关闭放在finally语句块中），但是可太复杂了！！！</p>
<pre><code class="language-java">	FileInputStream in = null;
  try {
    in = new FileInputStream("/tmp/axt.t");
    //
  } catch (FileNotFoundException e) {
    //
  } finally {
    if (in != null){
      try {
        in.close();
      } catch (IOException e) {
        //
      }
    }
  }
</code></pre>
<p>简洁一些的写法</p>
<pre><code class="language-java">try(FileInputStream in = new FileInputStream("/tmp/a.txt")){
   // do somethind
} catch (Exception e) {
   //
}

</code></pre>
<p>因为Java会对try块中申明的所有AutoCloseable类型的对象自动调用close()方法,不需要手动调用！</p>
<h2 id="过滤器流">过滤器流</h2>
<p>过滤器流实际上是对流功能的增强，使用的是装饰模式。</p>
<h3 id="装饰模式">装饰模式</h3>
<p>装饰模式就是在原有的基础上增加了一些新的功能，通过组合实现。</p>
<p>下为过滤器流类结构--装饰模式的体现</p>
<p><img src="https://img2020.cnblogs.com/blog/2147125/202009/2147125-20200926145119302-920478752.png" alt="" loading="lazy"></p>
<h3 id="过滤器流的作用">过滤器流的作用</h3>
<p>下面这段代码对FileInputStream 使用了 BufferedInputStream 和 DataInputStream 进行包裹</p>
<p>使得用户可以直接读取字符， 且是从Java缓冲区中获取（如果缓冲中没有可用数据，再尝试从底层输入流读取）</p>
<pre><code>FileInputStream in = new FileOutputStream("/tmp/a.txt");
in = new BufferedInputStream(in);
in = new DataInputStream(in);
in.readChar();
</code></pre>
<p>过滤器流还可以实现解压（ZIPInputStream)、Base64解码（Base64InputStream)等，也可以自定义过滤器流以实现特定功能）</p>
<h3 id="缓冲流">缓冲流</h3>
<p>缓冲流作为过滤器流中的一种， 在网络通信场景下使用缓冲有利于提升发送和接受数据的效率。</p>
<p>所以在发送数据时我们应该使用BufferedOutputStream， 这样写数据时会先写入到java的缓冲区中， 缓冲区满或者调用flush方法时才会真正的发送数据，能够提升性能（提升信道利用率）</p>
<pre><code class="language-java"> OutputStream out = new FileOutputStream("/tmp/a.txt");
 BufferedOutputStream outputStream = new BufferedOutputStream(out);
 out.write(1);
 out.flush();
</code></pre>
<h3 id="数据流">数据流</h3>
<p>缓冲流作为过滤器流中的一种，提供直接读写Java基本类型的API</p>
<pre><code class="language-java"> OutputStream out = new FileOutputStream("/tmp/a.txt");
 DataOutputStream  dataOutputStream = new DataOutputStream(out);
 dataOutputStream.writeChar('c'); //写字符
 dataOutputStream.writeUTF("ssss"); //写字符串
</code></pre>
<h2 id="阅读器和书写器">阅读器和书写器</h2>
<p>提供读写字符的API（如果只是ASCII编码， 直接使用字节流即可）</p>
<h3 id="书写器">书写器</h3>
<p>OutputStreamWriter 提供直接读取字符和字符串的能力</p>
<pre><code class="language-java">OutputStream out = new FileOutputStream("/tmp/a.txt"); //底层字节流
Writer writer = new OutputStreamWriter(out, StandardCharsets.UTF_8);
writer.write("哈哈哈");
</code></pre>
<h3 id="缓冲书写器">缓冲书写器</h3>
<p>BufferedWriter 提供一层写缓冲（作用类同字节流的BufferedOutputStream)</p>
<h3 id="demo">Demo</h3>
<pre><code class="language-java"> 	OutputStream out = new FileOutputStream("/tmp/a.txt"); //底层字节流
        Writer writer = new OutputStreamWriter(out, StandardCharsets.UTF_8);//书写器（编码）
        writer = new BufferedWriter(writer, 1000);//缓冲书写器
        for (int i = 0; i &lt; 128; i ++){
            writer.write(i); 
        }
        writer.write("哈哈哈哈哈");//写汉字， utf-8编码可见，如果是ascii编码会乱码
        writer.flush(); //这里其实不用flush, close之前会flush，但是最好有。
        writer.close(); //close流， 释放底层资源。

</code></pre>
<h2 id="总结">总结</h2>
<p>总体分成两类 字节流 和字符流， 字符流是仅对字节流的装饰（或者说字符流的底层就是字节流）</p>
<p>过滤器流：对基础流增加一些额外的功能 如果缓冲、压缩、加密等</p>
<p>缓冲流：读写数据中间加一层缓冲区，提升数据传输效率。</p>

</div>
<div id="MySignature"></div>
<div class="clear"></div>
<div id="blog_post_info_block">
    <div id="blog_post_info"></div>
    <div class="clear"></div>
    <div id="post_next_prev"></div>
</div>
            </div>
            <div class="postDesc">posted @ 
<span id="post-date">2020-09-26 14:53</span>&nbsp;
<a href="https://www.cnblogs.com/pepper-0611/">油多坏不了菜</a>&nbsp;
阅读(<span id="post_view_count">24</span>)&nbsp;
评论(<span id="post_comment_count">0</span>)&nbsp;
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=13735018" rel="nofollow">编辑</a>&nbsp;
<a href="javascript:void(0)" onclick="AddToWz(13735018);return false;">收藏</a></div>
        </div>
<script src="https://common.cnblogs.com/highlight/9.12.0/highlight.min.js"></script>
<script>markdown_highlight();</script>
<script>
    var allowComments = true, cb_blogId = 629008, cb_blogApp = 'pepper-0611', cb_blogUserGuid = '316d49b4-3808-4ab5-2d12-08d850c2b691';
    var cb_entryId = 13735018, cb_entryCreatedDate = '2020-09-26 14:53', cb_postType = 1;
    loadViewCount(cb_entryId);
</script><a name="!comments"></a>
<div id="blog-comments-placeholder"></div>
<script>
    var commentManager = new blogCommentManager();
    commentManager.renderComments(0);
</script>
<div id="comment_form" class="commentform">
    <a name="commentform"></a>
    <div id="divCommentShow"></div>
    <div id="comment_nav"><span id="span_refresh_tips"></span><a href="javascript:void(0);" onclick="return RefreshCommentList();" id="lnk_RefreshComments" runat="server" clientidmode="Static">刷新评论</a><a href="#" onclick="return RefreshPage();">刷新页面</a><a href="#top">返回顶部</a></div>
    <div id="comment_form_container"></div>
    <div class="ad_text_commentbox" id="ad_text_under_commentbox"></div>
    <div id="ad_t2"></div>
    <div id="opt_under_post"></div>
    <div id="cnblogs_c1" class="c_ad_block">
        <div id='div-gpt-ad-1592365906576-0' style='width: 300px; height: 250px;'></div>
    </div>
    <div id="under_post_news"></div>
    <div id="cnblogs_c2" class="c_ad_block">
        <div id='div-gpt-ad-1592366332455-0' style='width: 468px; height: 60px;'></div>
    </div>
    <div id="under_post_kb"></div>
    <div id="HistoryToday" class="c_ad_block"></div>
    <script type="text/javascript">
        fixPostBody();
        deliverBigBanner();
setTimeout(function() { incrementViewCount(cb_entryId); }, 50);        deliverT2();
        deliverC1C2();
        loadNewsAndKb();
        loadBlogSignature();
LoadPostCategoriesTags(cb_blogId, cb_entryId);        LoadPostInfoBlock(cb_blogId, cb_entryId, cb_blogApp, cb_blogUserGuid);
        GetPrevNextPost(cb_entryId, cb_blogId, cb_entryCreatedDate, cb_postType);
        loadOptUnderPost();
        GetHistoryToday(cb_blogId, cb_blogApp, cb_entryCreatedDate);
    </script>
</div>    </div>
</div>
            </div>
        </div>

        <div id="sideBar">
            <div id="sideBarMain">
                
<div id="sidebar_news" class="newsItem">
            <script>loadBlogNews();</script>
</div>

<div id="sidebar_ad"></div>
                <div id="calendar"><div id="blog-calendar" style="display:none"></div></div>                
                <script>loadBlogDefaultCalendar();</script>
                <div id="leftcontentcontainer">
                    <!-- begin:SingleColumn -->
                    <div id="blog-sidecolumn"></div>
                    <script>loadBlogSideColumn();</script>
                    <!-- end:  SingleColumn -->
                </div>
            </div>
        </div>
        <div class="clear"></div>
    </div>
    <div class="clear"></div>
    <div id="footer">
        <!--done-->
Copyright &copy; 2020 油多坏不了菜
<br /><span id="poweredby">Powered by .NET Core on Kubernetes</span>

    </div>
</div>

    
</body>
</html>
